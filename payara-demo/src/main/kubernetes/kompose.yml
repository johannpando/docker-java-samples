apiVersion: v1
items:
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f src/main/docker/docker-compose.yml -o src/main/kubernetes/kompose.yml
        kompose.version: 1.26.1 (a9d05d50)
      creationTimestamp: null
      labels:
        io.kompose.service: payara5
      name: payara5
    spec:
      ports:
        - name: "4848"
          port: 4848
          targetPort: 4848
        - name: "8080"
          port: 8080
          targetPort: 8080
        - name: "8181"
          port: 8181
          targetPort: 8181
      selector:
        io.kompose.service: payara5
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        kompose.cmd: kompose convert -f src/main/docker/docker-compose.yml -o src/main/kubernetes/kompose.yml
        kompose.version: 1.26.1 (a9d05d50)
      creationTimestamp: null
      labels:
        io.kompose.service: postgresql14
      name: postgresql14
    spec:
      ports:
        - name: "5432"
          port: 5432
          targetPort: 5432
      selector:
        io.kompose.service: postgresql14
    status:
      loadBalancer: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f src/main/docker/docker-compose.yml -o src/main/kubernetes/kompose.yml
        kompose.version: 1.26.1 (a9d05d50)
      creationTimestamp: null
      labels:
        io.kompose.service: payara5
      name: payara5
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: payara5
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f src/main/docker/docker-compose.yml -o src/main/kubernetes/kompose.yml
            kompose.version: 1.26.1 (a9d05d50)
          creationTimestamp: null
          labels:
            io.kompose.service: payara5
        spec:
          containers:
            - env:
                - name: JVM_ARGS
                  value: -Xms1800m -Xmx1800m -XX:+UseG1GC -XX:+UseStringDeduplication
                - name: PAYARA_DB_PASSWORD
                  value: informatica
                - name: PAYARA_SERVER_HOST
                  value: postgresql14
                - name: PAYARA_URL
                  value: jdbc:postgresql://postgresql14:5432/postgres
              image: tuxtor/payara-demo-micro:latest
              imagePullPolicy: Never
              name: payara5
              ports:
                - containerPort: 4848
                - containerPort: 8080
                - containerPort: 8181
              resources: {}
              volumeMounts:
                - mountPath: /opt/payara
                  name: server-data
          restartPolicy: Always
          volumes:
            - name: server-data
              persistentVolumeClaim:
                claimName: server-data
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: server-data
      name: server-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      annotations:
        kompose.cmd: kompose convert -f src/main/docker/docker-compose.yml -o src/main/kubernetes/kompose.yml
        kompose.version: 1.26.1 (a9d05d50)
      creationTimestamp: null
      labels:
        io.kompose.service: postgresql14
      name: postgresql14
    spec:
      replicas: 1
      selector:
        matchLabels:
          io.kompose.service: postgresql14
      strategy:
        type: Recreate
      template:
        metadata:
          annotations:
            kompose.cmd: kompose convert -f src/main/docker/docker-compose.yml -o src/main/kubernetes/kompose.yml
            kompose.version: 1.26.1 (a9d05d50)
          creationTimestamp: null
          labels:
            io.kompose.service: postgresql14
        spec:
          containers:
            - env:
                - name: POSTGRES_DB
                  value: postgres
                - name: POSTGRES_PASSWORD
                  value: informatica
              image: postgres:14
              name: postgresql14
              ports:
                - containerPort: 5432
              resources: {}
              volumeMounts:
                - mountPath: /var/lib/postgresql/data/
                  name: database-data
          restartPolicy: Always
          volumes:
            - name: database-data
              persistentVolumeClaim:
                claimName: database-data
    status: {}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: database-data
      name: database-data
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
    status: {}
kind: List
metadata: {}

